{"version":3,"sources":["webpack:///./src/redux/state.js","webpack:///./src/config/vibes.js","webpack:///./src/redux/actions.js","webpack:///./src/utils/fighting.js","webpack:///./src/redux/sounds.js","webpack:///./src/redux/store.js","webpack:///./src/components/PageContainer.js","webpack:///./src/components/InitialPage.js","webpack:///./src/components/ChooseNamePage.js","webpack:///./src/config/playerWeapons.js","webpack:///./src/components/ChooseWeaponPage.js","webpack:///./src/config/bosses.js","webpack:///./src/components/ChooseBossPage.js","webpack:///./src/components/FlexSpacer.js","webpack:///./src/components/FightPage.js","webpack:///./src/components/ErrorPage.js","webpack:///./src/components/App.js","webpack:///./src/index.js","webpack:///./src/components/PageContainer.css","webpack:///./src/components/FightPage.css","webpack:///./src/sounds/hurray_1.mp3","webpack:///./src/sounds/im_sad_1.mp3","webpack:///./src/sounds/nice_1.mp3","webpack:///./src/sounds/this_sucks_1.mp3","webpack:///./src/sounds/wow_1.mp3","webpack:///./src/sounds/best_friends.mp3","webpack:///./src/sounds/leaving_party.mp3"],"names":["initialState","stage","BAD_VIBES_MAX","OK_VIBES_MAX","GOOD_VIBES_MAX","reducer","state","action","type","payload","name","player","weapon","vibes","boss","changeVibes","fighter","clamp","vibesAreMax","vibesBecameZero","fighterBefore","fighterAfter","vibesBecameMax","vibesWentDown","vibesWentUp","BOOST_VIBES_SOUNDS","soundHurray1","soundNice1","soundWow1","HURT_VIBES_SOUNDS","soundSad1","soundThisSucks1","playSoundFromList","list","playSound","sample","sound","Audio","play","soundsMiddleware","store","next","previousState","getState","result","currentState","stageBefore","stageAfter","gameEndedHappy","gameEndedSad","eitherPlayerVibesWentUp","eitherPlayerVibesWentDown","soundLeavingParty","soundBestFriends","useDispatch","useDispatchGeneric","PageContainer","orientation","children","className","classNames","styles","root","vertical","defaultProps","InitialPage","_props","dispatch","startGame","useHotkeys","style","alignSelf","onClick","ChooseNamePage","tempName","setTempName","useState","setName","actions","resetGame","autoFocus","value","onChange","e","target","onKeyDown","key","PLAYER_WEAPONS","attacks","header","description","ChooseWeaponPage","marginBottom","map","console","trace","selectWeapon","BOSSES","ChooseBossPage","selectBoss","FlexSpacer","flexGrow","FightPage","hurtPlayerVibes","boostPlayerVibes","hurtBossVibes","boostBossVibes","FighterSection","boostFn","hurtFn","fighterSection","VibeOMeter","max","buttons","vibeLevel","colorProps","error","warning","success","primary","ErrorPage","App","middleware","selector","useSelectorGeneric","applyMiddleware","logger","createStoreGeneric","window","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"js/main.c63d41d8dc9f9b36c0bb.js","sourcesContent":["// @flow\nimport type { Stage } from '../types/Stage';\n\nexport type ReduxState = Stage;\n\nexport const initialState: ReduxState = {\n  stage: 'initial',\n};\n","// @flow\n\nexport const BAD_VIBES_MAX = 2;\nexport const OK_VIBES_MIN = 3;\nexport const OK_VIBES_MAX = 6;\nexport const GOOD_VIBES_MIN = 7;\nexport const GOOD_VIBES_MAX = 10;\n","// @flow\nimport type { ReduxState } from './state';\nimport type { Fighter, Weapon } from '../types/Fighter';\nimport { initialState } from './state';\nimport { GOOD_VIBES_MAX } from '../config/vibes';\nimport clamp from 'lodash/clamp';\n\n/*\n  Resets the game and move to the initial state\n*/\n\ntype ResetGameAction = { type: 'reset_game' };\nexport function resetGame(): ResetGameAction {\n  return { type: 'reset_game' };\n}\n\n/*\n  Start the game and move to choosing a character\n*/\n\ntype StartGameAction = { type: 'start_game' };\nexport function startGame(): StartGameAction {\n  return { type: 'start_game' };\n}\n\n/*\n  Sets the player's name and move to choosing a weapon\n*/\n\ntype SetNameAction = { type: 'set_name', payload: string };\nexport function setName(name: string): SetNameAction {\n  return { type: 'set_name', payload: name };\n}\n\n/*\n  Go back to fix an error with the player's name\n*/\n\ntype UnsetNameAction = { type: 'unset_name' };\nexport function unsetName(): UnsetNameAction {\n  return { type: 'unset_name' };\n}\n\n/*\n  Selects the player's weapon and move to choosing a boss to fight\n*/\n\ntype SelectWeaponAction = { type: 'select_weapon', payload: Weapon };\nexport function selectWeapon(weapon: Weapon): SelectWeaponAction {\n  return { type: 'select_weapon', payload: weapon };\n}\n\n/*\n  Go back to fix an error with the player's weapon\n*/\n\ntype UnselectWeaponAction = { type: 'unselect_weapon' };\nexport function unselectWeapon(): UnselectWeaponAction {\n  return { type: 'unselect_weapon' };\n}\n\n/*\n  Selects the player's opponent and move to fight!\n*/\n\ntype SelectBossAction = { type: 'select_boss', payload: Fighter };\nexport function selectBoss(boss: Fighter): SelectBossAction {\n  return { type: 'select_boss', payload: boss };\n}\n\n/*\n  Attacks from the player or the boss!\n*/\n\ntype ChangePlayerVibesAction = { type: 'change_player_vibes', payload: number };\nexport function hurtPlayerVibes(): ChangePlayerVibesAction {\n  return { type: 'change_player_vibes', payload: -1 };\n}\nexport function boostPlayerVibes(): ChangePlayerVibesAction {\n  return { type: 'change_player_vibes', payload: 1 };\n}\n\ntype ChangeBossVibesAction = { type: 'change_boss_vibes', payload: number };\nexport function hurtBossVibes(): ChangeBossVibesAction {\n  return { type: 'change_boss_vibes', payload: -1 };\n}\nexport function boostBossVibes(): ChangeBossVibesAction {\n  return { type: 'change_boss_vibes', payload: 1 };\n}\n\n/*\n  Define the final action type as the union of all actions\n*/\n\nexport type ReduxAction =\n  | ResetGameAction\n  | StartGameAction\n  | SetNameAction\n  | UnsetNameAction\n  | SelectWeaponAction\n  | UnselectWeaponAction\n  | SelectBossAction\n  | ChangePlayerVibesAction\n  | ChangeBossVibesAction;\n\n/*\n  Handle actions in the reducer\n*/\n\nexport function reducer(\n  state: ReduxState = initialState,\n  action: ReduxAction,\n): ReduxState {\n  switch (action.type) {\n    case 'reset_game': {\n      return { stage: 'initial' };\n    }\n\n    case 'start_game': {\n      if (state.stage !== 'initial') return state;\n      return { stage: 'choose_name' };\n    }\n\n    case 'set_name': {\n      if (state.stage !== 'choose_name') return state;\n      if (!action.payload) return state;\n      return { stage: 'choose_weapon', name: action.payload };\n    }\n\n    case 'unset_name': {\n      if (state.stage !== 'choose_weapon') return state;\n      return { stage: 'choose_name' };\n    }\n\n    case 'select_weapon': {\n      if (state.stage !== 'choose_weapon') return state;\n      return {\n        stage: 'choose_boss',\n        player: {\n          name: state.name,\n          weapon: action.payload,\n          vibes: 7,\n        },\n      };\n    }\n\n    case 'unselect_weapon': {\n      if (state.stage !== 'choose_boss') return state;\n      return { stage: 'choose_weapon', name: state.player.name };\n    }\n\n    case 'select_boss': {\n      if (state.stage !== 'choose_boss') return state;\n      return {\n        stage: 'fight',\n        player: state.player,\n        boss: action.payload,\n      };\n    }\n\n    case 'change_player_vibes': {\n      if (state.stage !== 'fight') return state;\n      return {\n        stage: 'fight',\n        player: changeVibes(state.player, action.payload),\n        boss: state.boss,\n      };\n    }\n\n    case 'change_boss_vibes': {\n      if (state.stage !== 'fight') return state;\n      return {\n        stage: 'fight',\n        player: state.player,\n        boss: changeVibes(state.boss, action.payload),\n      };\n    }\n\n    default:\n      return state || initialState;\n  }\n}\n\nfunction changeVibes(fighter: Fighter, vibes: number): Fighter {\n  return { ...fighter, vibes: clamp(fighter.vibes + vibes, 0, GOOD_VIBES_MAX) };\n}\n","// @flow\nimport type { Fighter } from '../types/Fighter';\nimport type { FightStage } from '../types/Stage';\nimport { GOOD_VIBES_MAX } from '../config/vibes';\n\nexport function vibesAreZero(fighter: Fighter): boolean {\n  return fighter.vibes === 0;\n}\n\nexport function vibesAreMax(fighter: Fighter): boolean {\n  return fighter.vibes === GOOD_VIBES_MAX;\n}\n\nexport function vibesBecameZero(fighterBefore: Fighter, fighterAfter: Fighter): boolean {\n  return fighterBefore.vibes !== 0 && fighterAfter.vibes === 0;\n}\n\nexport function vibesBecameMax(fighterBefore: Fighter, fighterAfter: Fighter): boolean {\n  return fighterBefore.vibes !== GOOD_VIBES_MAX && fighterAfter.vibes === GOOD_VIBES_MAX;\n}\n\nexport function vibesWentDown(fighterBefore: Fighter, fighterAfter: Fighter): boolean {\n  return fighterBefore.vibes > fighterAfter.vibes;\n}\n\nexport function vibesWentUp(fighterBefore: Fighter, fighterAfter: Fighter): boolean {\n  return fighterBefore.vibes < fighterAfter.vibes;\n}\n\nexport function eitherPlayerVibesWentUp(\n  stageBefore: FightStage,\n  stageAfter: FightStage,\n): boolean {\n  return (\n    vibesWentUp(stageBefore.player, stageAfter.player) ||\n    vibesWentUp(stageBefore.boss, stageAfter.boss)\n  );\n}\n\nexport function eitherPlayerVibesWentDown(\n  stageBefore: FightStage,\n  stageAfter: FightStage,\n): boolean {\n  return (\n    vibesWentDown(stageBefore.player, stageAfter.player) ||\n    vibesWentDown(stageBefore.boss, stageAfter.boss)\n  );\n}\n\nexport function gameEndedSad(stageBefore: FightStage, stageAfter: FightStage): boolean {\n  return (\n    vibesBecameZero(stageBefore.player, stageAfter.player) ||\n    vibesBecameZero(stageBefore.boss, stageAfter.boss)\n  );\n}\n\nexport function gameEndedHappy(stageBefore: FightStage, stageAfter: FightStage): boolean {\n  return (\n    (vibesAreMax(stageAfter.player) &&\n      vibesBecameMax(stageBefore.boss, stageAfter.boss)) ||\n    (vibesAreMax(stageAfter.boss) &&\n      vibesBecameMax(stageBefore.player, stageAfter.player))\n  );\n}\n","// @flow\nimport type { ReduxMiddleware } from './store';\n// import type { Fighter } from '../types/Fighter';\nimport sample from 'lodash/sample';\nimport {\n  eitherPlayerVibesWentUp,\n  eitherPlayerVibesWentDown,\n  gameEndedSad,\n  gameEndedHappy,\n} from '../utils/fighting.js';\n\n// TODO: figure this shit out\n// $FlowFixMe\nimport soundHurray1 from '../sounds/hurray_1.mp3';\n// $FlowFixMe\nimport soundSad1 from '../sounds/im_sad_1.mp3';\n// $FlowFixMe\nimport soundNice1 from '../sounds/nice_1.mp3';\n// $FlowFixMe\nimport soundThisSucks1 from '../sounds/this_sucks_1.mp3';\n// $FlowFixMe\nimport soundWow1 from '../sounds/wow_1.mp3';\n// $FlowFixMe\nimport soundBestFriends from '../sounds/best_friends.mp3';\n// $FlowFixMe\nimport soundLeavingParty from '../sounds/leaving_party.mp3';\n\ntype Sound = string;\n\nconst BOOST_VIBES_SOUNDS = [soundHurray1, soundNice1, soundWow1];\nconst HURT_VIBES_SOUNDS = [soundSad1, soundThisSucks1];\n\nconst soundsMiddleware: ReduxMiddleware = (store) => (next) => (action) => {\n  const previousState = store.getState();\n  const result = next(action);\n  const currentState = store.getState();\n\n  if (previousState.stage === 'fight' && currentState.stage === 'fight') {\n    if (gameEndedHappy(previousState, currentState)) {\n      playSound(soundBestFriends);\n    } else if (gameEndedSad(previousState, currentState)) {\n      playSound(soundLeavingParty);\n    } else if (eitherPlayerVibesWentUp(previousState, currentState)) {\n      playSoundFromList(BOOST_VIBES_SOUNDS);\n    } else if (eitherPlayerVibesWentDown(previousState, currentState)) {\n      playSoundFromList(HURT_VIBES_SOUNDS);\n    }\n  }\n\n  // $FlowFixMe - hmmm\n  return result;\n};\n\nfunction playSoundFromList(list: Array<Sound>) {\n  const sound = sample(list);\n  playSound(sound);\n}\n\nfunction playSound(sound: Sound) {\n  const audio = new Audio(sound);\n  audio.play();\n}\n\nexport default soundsMiddleware;\n","// @flow\nimport {\n  applyMiddleware,\n  createStore as createStoreGeneric,\n  type Store as StoreGeneric,\n  type Middleware as MiddlewareGeneric,\n} from 'redux';\nimport {\n  useSelector as useSelectorGeneric,\n  useDispatch as useDispatchGeneric,\n} from 'react-redux';\nimport logger from 'redux-logger';\nimport { type ReduxAction, reducer } from './actions';\nimport { type ReduxState } from './state';\nimport soundsMiddleware from './sounds';\n\nexport type ReduxDispatch = <T: ReduxAction>(T) => T;\nexport type ReduxStore = StoreGeneric<ReduxState, ReduxAction, ReduxDispatch>;\nexport type ReduxMiddleware = MiddlewareGeneric<ReduxState, ReduxAction, ReduxDispatch>;\n\nexport function createStore(): ReduxStore {\n  const middleware = applyMiddleware(logger, soundsMiddleware);\n  return createStoreGeneric(reducer, middleware);\n}\n\nexport function useSelector<Result>(selector: (state: ReduxState) => Result): Result {\n  return useSelectorGeneric(selector);\n}\n\nexport function useDispatch(): ReduxDispatch {\n  return useDispatchGeneric();\n}\n","// @flow\nimport React from 'react';\nimport classNames from 'classnames';\nimport styles from './PageContainer.css';\n\ntype Props = {\n  orientation: 'horizontal' | 'vertical',\n  children: React$Node,\n};\n\nexport default function PageContainer({ orientation, children }: Props) {\n  return (\n    <div\n      className={classNames({\n        [styles.root]: true,\n        [styles.vertical]: orientation == 'vertical',\n      })}\n    >\n      {children}\n    </div>\n  );\n}\nPageContainer.defaultProps = {\n  orientation: 'horizontal',\n};\n","// @flow\nimport type { InitialStage } from '../types/Stage';\nimport React from 'react';\nimport PageContainer from './PageContainer';\nimport { Button } from 'nes-react';\nimport * as actions from '../redux/actions';\nimport { useDispatch } from '../redux/store';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nexport default function InitialPage(_props: InitialStage) {\n  const dispatch = useDispatch();\n  const startGame = () => dispatch(actions.startGame());\n\n  useHotkeys('enter', startGame);\n  useHotkeys('space', startGame);\n\n  return (\n    <PageContainer>\n      <div style={{ alignSelf: 'center' }}>\n        <Button onClick={startGame}>Start Game</Button>\n      </div>\n    </PageContainer>\n  );\n}\n","// @flow\nimport type { ChooseNameStage } from '../types/Stage';\nimport React, { useState } from 'react';\nimport PageContainer from './PageContainer';\nimport { Button, TextInput } from 'nes-react';\nimport * as actions from '../redux/actions';\nimport { useDispatch } from '../redux/store';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nexport default function ChooseNamePage(_props: ChooseNameStage) {\n  const [tempName, setTempName] = useState('');\n\n  const dispatch = useDispatch();\n  const setName = () => dispatch(actions.setName(tempName));\n  const resetGame = () => dispatch(actions.resetGame());\n\n  // useHotkeys('enter', setName);\n  useHotkeys('esc', resetGame);\n\n  return (\n    <PageContainer>\n      <div style={{ alignSelf: 'center' }}>\n        <h1>Enter Your Name</h1>\n        <TextInput\n          autoFocus\n          value={tempName}\n          onChange={(e) => setTempName(e.target.value)}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') setName();\n            if (e.key === 'Escape') resetGame();\n          }}\n        />\n        &nbsp;\n        <Button onClick={setName}>Set Name</Button>\n      </div>\n    </PageContainer>\n  );\n}\n","// @flow\nimport type { Weapon } from '../types/Fighter';\n\nexport const PRIVATE_SLACK_CHANNEL: Weapon = {\n  name: 'Private Slack Channel',\n  attacks: [\n    { header: 'Attack 1', description: 'Lock down' },\n    { header: 'Attack 2', description: 'Exclude' },\n    { header: 'Attack 3', description: '@-mention' },\n  ],\n};\n\nexport const INSIDE_JOKE_STICK: Weapon = {\n  name: 'Inside Joke Stick',\n  attacks: [\n    { header: 'Attack 1', description: 'Make inside joke' },\n    { header: 'Attack 2', description: 'Laugh' },\n    { header: 'Attack 3', description: 'Clown around' },\n  ],\n};\n\nexport const SIDE_SHAVE: Weapon = {\n  name: 'Side Shave',\n  attacks: [\n    { header: 'Attack 1', description: 'Hair flip' },\n    { header: 'Attack 2', description: 'Body mod' },\n    { header: 'Attack 3', description: 'Compliment' },\n  ],\n};\n\nexport const JUDGEMENT_GAVEL: Weapon = {\n  name: 'Judgement Gavel',\n  attacks: [\n    { header: 'Attack 1', description: 'Call for order' },\n    { header: 'Attack 2', description: 'Pass judgement' },\n    { header: 'Attack 3', description: 'Overrule objection' },\n  ],\n};\n\nexport const POI_BALLS: Weapon = {\n  name: 'Poi Balls',\n  attacks: [\n    { header: 'Attack 1', description: 'Spin' },\n    { header: 'Attack 2', description: 'Dazzle' },\n    { header: 'Attack 3', description: 'Demonstrate' },\n  ],\n};\n\nconst PLAYER_WEAPONS = [\n  PRIVATE_SLACK_CHANNEL,\n  INSIDE_JOKE_STICK,\n  SIDE_SHAVE,\n  JUDGEMENT_GAVEL,\n  POI_BALLS,\n];\n\nexport default PLAYER_WEAPONS;\n","// @flow\nimport type { ChooseWeaponStage } from '../types/Stage';\nimport React from 'react';\nimport PageContainer from './PageContainer';\nimport { Button, List } from 'nes-react';\nimport * as actions from '../redux/actions';\nimport { useDispatch } from '../redux/store';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport PLAYER_WEAPONS from '../config/playerWeapons';\n\nexport default function ChooseWeaponPage(_props: ChooseWeaponStage) {\n  const dispatch = useDispatch();\n\n  const selectWeapon = (weapon) => {\n    console.trace('selected weapon');\n    dispatch(actions.selectWeapon(weapon));\n  };\n  const unsetName = () => dispatch(actions.unsetName());\n\n  useHotkeys('esc', unsetName);\n\n  return (\n    <PageContainer>\n      <div style={{ alignSelf: 'center' }}>\n        <h1 style={{ marginBottom: 16 }}>Choose Your Weapon</h1>\n        <List>\n          {PLAYER_WEAPONS.map((weapon) => (\n            <li key={weapon.name} style={{ marginBottom: 16 }}>\n              <span>{weapon.name}</span>&nbsp;\n              <Button onClick={() => selectWeapon(weapon)}>Select</Button>\n            </li>\n          ))}\n        </List>\n      </div>\n    </PageContainer>\n  );\n}\n","// @flow\nimport type { Fighter } from '../types/Fighter';\n\nexport const KAREN: Fighter = {\n  vibes: 5,\n  name: 'Karen From Marketing',\n  weapon: {\n    name: 'Asana',\n    attacks: [\n      { header: 'Favorite time of day', description: 'On time' },\n      { header: 'Favorite TV show', description: 'The Bachelor' },\n      {\n        header: 'Favorite tool',\n        description: 'Shared Google calendar for syncing ClassPass with all her friends',\n      },\n    ],\n  },\n};\n\nexport const CHAD: Fighter = {\n  vibes: 6,\n  name: 'Chad From Sales',\n  weapon: {\n    name: 'Beer Staff',\n    attacks: [\n      { header: 'Favorite gesture', description: 'Smile and point' },\n      { header: 'Favorite place', description: 'Box seats at Giants game' },\n      { header: 'Favorite part of self', description: 'Perfect hair' },\n    ],\n  },\n};\n\nexport const LEVI: Fighter = {\n  vibes: 7,\n  name: 'Levi The CEO',\n  weapon: {\n    name: 'Tesla',\n    attacks: [\n      { header: 'Favorite meal system', description: 'Thistle' },\n      { header: 'Favorite personality system', description: 'Enneagram' },\n      {\n        header: 'Favorite clothes since doing Ayahuasca',\n        description: 'Custom heather-gray poncho',\n      },\n    ],\n  },\n};\n\nconst BOSSES = [KAREN, CHAD, LEVI];\n\nexport default BOSSES;\n","// @flow\nimport type { ChooseBossStage } from '../types/Stage';\nimport React from 'react';\nimport PageContainer from './PageContainer';\nimport { Button, List } from 'nes-react';\nimport * as actions from '../redux/actions';\nimport { useDispatch } from '../redux/store';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport BOSSES from '../config/bosses';\n\nexport default function ChooseBossPage(_props: ChooseBossStage) {\n  const dispatch = useDispatch();\n\n  const selectBoss = (boss) => dispatch(actions.selectBoss(boss));\n  const unselectWeapon = () => dispatch(actions.unselectWeapon());\n\n  useHotkeys('esc', unselectWeapon);\n\n  return (\n    <PageContainer>\n      <div style={{ alignSelf: 'center' }}>\n        <h1 style={{ marginBottom: 16 }}>Choose Your Boss</h1>\n        <List>\n          {BOSSES.map((boss) => (\n            <li key={boss.name} style={{ marginBottom: 16 }}>\n              <span>{boss.name}</span>&nbsp;\n              <Button onClick={() => selectBoss(boss)}>Select</Button>\n            </li>\n          ))}\n        </List>\n      </div>\n    </PageContainer>\n  );\n}\n","// @flow\nimport React from 'react';\n\nexport default function FlexSpacer() {\n  return <div style={{ flexGrow: 1 }} />;\n}\n","// @flow\nimport type { Fighter } from '../types/Fighter';\nimport type { FightStage } from '../types/Stage';\nimport React from 'react';\nimport PageContainer from './PageContainer';\nimport FlexSpacer from './FlexSpacer';\nimport styles from './FightPage.css';\nimport { Button, List, Progress } from 'nes-react';\nimport * as actions from '../redux/actions';\nimport { useDispatch } from '../redux/store';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { BAD_VIBES_MAX, OK_VIBES_MAX, GOOD_VIBES_MAX } from '../config/vibes';\n\nexport default function FightPage({ player, boss }: FightStage) {\n  const dispatch = useDispatch();\n  const hurtPlayerVibes = () => dispatch(actions.hurtPlayerVibes());\n  const boostPlayerVibes = () => dispatch(actions.boostPlayerVibes());\n  const hurtBossVibes = () => dispatch(actions.hurtBossVibes());\n  const boostBossVibes = () => dispatch(actions.boostBossVibes());\n  const resetGame = () => dispatch(actions.resetGame());\n\n  useHotkeys('q', hurtPlayerVibes);\n  useHotkeys('w', boostPlayerVibes);\n  useHotkeys('[', hurtBossVibes);\n  useHotkeys(']', boostBossVibes);\n  useHotkeys('esc', resetGame);\n\n  return (\n    <PageContainer>\n      <FighterSection\n        fighter={player}\n        boostFn={boostPlayerVibes}\n        hurtFn={hurtPlayerVibes}\n      />\n      <FighterSection fighter={boss} boostFn={boostBossVibes} hurtFn={hurtBossVibes} />\n    </PageContainer>\n  );\n}\n\ntype FighterSectionProps = {\n  fighter: Fighter,\n  hurtFn: () => mixed,\n  boostFn: () => mixed,\n};\n\nfunction FighterSection({ fighter, hurtFn, boostFn }: FighterSectionProps) {\n  return (\n    <div className={styles.fighterSection}>\n      <h2>👤 {fighter.name}</h2>\n      <br />\n      <VibeOMeter vibes={fighter.vibes} max={GOOD_VIBES_MAX} />\n      <br />\n      <br />\n      <br />\n      <h3 style={{ marginBottom: 16 }}>🗡️ {fighter.weapon.name}</h3>\n      <List>\n        {fighter.weapon.attacks.map(({ header, description }) => (\n          <li key={header} style={{ marginBottom: 16 }}>\n            <strong>{header}:&nbsp;</strong>\n            <span>{description}</span>\n          </li>\n        ))}\n      </List>\n\n      <FlexSpacer />\n\n      <div className={styles.buttons}>\n        <Button onClick={() => hurtFn()}>Hurt vibes</Button>\n        <Button onClick={() => boostFn()}>Boost vibes</Button>\n      </div>\n    </div>\n  );\n}\n\ntype VibeOMeterProps = {\n  vibes: number,\n  max: number,\n};\n\nfunction VibeOMeter({ vibes, max }: VibeOMeterProps) {\n  const vibeLevel = (() => {\n    if (vibes <= 0) return 'vibes killed';\n    if (vibes <= BAD_VIBES_MAX) return 'regretting this experience';\n    if (vibes <= OK_VIBES_MAX) return 'having second thoughts';\n    if (vibes < GOOD_VIBES_MAX) return \"vibin'\";\n    return 'out of this world';\n  })();\n\n  const colorProps = (() => {\n    if (vibes <= BAD_VIBES_MAX) return { error: true };\n    if (vibes <= OK_VIBES_MAX) return { warning: true };\n    if (vibes < GOOD_VIBES_MAX) return { success: true };\n    return { primary: true };\n    // TODO: more fun when in SuperVibes\n  })();\n  return (\n    <div>\n      <div>\n        <strong>Vibe Level:</strong> {vibeLevel}\n      </div>\n      <br />\n      <Progress value={vibes} max={max} {...colorProps} />\n    </div>\n  );\n}\n","// @flow\nimport React from 'react';\n\nexport default function ErrorPage() {\n  return <div>Error</div>;\n}\n","// @flow\nimport React from 'react';\nimport { hot } from 'react-hot-loader/root';\nimport { useSelector } from '../redux/store';\nimport InitialPage from './InitialPage';\nimport ChooseNamePage from './ChooseNamePage';\nimport ChooseWeaponPage from './ChooseWeaponPage';\nimport ChooseBossPage from './ChooseBossPage';\nimport FightPage from './FightPage';\nimport ErrorPage from './ErrorPage';\n\nfunction App() {\n  const state = useSelector((state) => state);\n\n  switch (state.stage) {\n    case 'initial':\n      return <InitialPage {...state} />;\n    case 'choose_name':\n      return <ChooseNamePage {...state} />;\n    case 'choose_weapon':\n      return <ChooseWeaponPage {...state} />;\n    case 'choose_boss':\n      return <ChooseBossPage {...state} />;\n    case 'fight':\n      return <FightPage {...state} />;\n    default: {\n      (state.stage: empty);\n      return <ErrorPage />;\n    }\n  }\n}\n\nexport default hot(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport { createStore } from './redux/store';\n\nimport './index.css';\n\nconst store = createStore();\nwindow.store = store;\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('app'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"root___2n_im\",\"vertical\":\"vertical___3O9b5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fighterSection\":\"fighterSection___1cKVC\",\"buttons\":\"buttons___2q_fd\"};","module.exports = __webpack_public_path__ + \"sounds/4503ffbf5846e7c923f5784d80eefdbf.mp3\";","module.exports = __webpack_public_path__ + \"sounds/2b307a34a496018e8b15e0019b51f560.mp3\";","module.exports = __webpack_public_path__ + \"sounds/042b6984c0046a12376d4643010badc2.mp3\";","module.exports = __webpack_public_path__ + \"sounds/4c85cd22e801b840bb86474d3f2c2a36.mp3\";","module.exports = __webpack_public_path__ + \"sounds/129cfad7ea9a8a92cb681eff01ca1588.mp3\";","module.exports = __webpack_public_path__ + \"sounds/6698fca4aa3ac0aed95a2a79438080cf.mp3\";","module.exports = __webpack_public_path__ + \"sounds/7f7c8d896f74e55de85d2db0234460fd.mp3\";"],"sourceRoot":""}